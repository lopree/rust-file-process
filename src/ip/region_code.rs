use std::collections::HashMap;
use lazy_static::lazy_static;

lazy_static! {
    static ref REGION_MAP: HashMap<&'static str, &'static str> = {
        let mut m = HashMap::new();
        m.insert("TIA", "阿尔巴尼亚地拉那");
        m.insert("ALG", "阿尔及利亚阿尔及尔");
        m.insert("AAE", "阿尔及利亚安纳巴");
        m.insert("ORN", "阿尔及利亚奥兰");
        m.insert("LAD", "安哥拉卢安达");
        m.insert("EZE", "阿根廷布宜诺斯艾利斯");
        m.insert("COR", "阿根廷科尔多瓦");
        m.insert("NQN", "阿根廷纽肯");
        m.insert("EVN", "亚美尼亚埃里温");
        m.insert("ADL", "澳大利亚阿德莱德");
        m.insert("BNE", "澳大利亚布里斯班");
        m.insert("CBR", "澳大利亚堪培拉");
        m.insert("HBA", "澳大利亚霍巴特");
        m.insert("MEL", "澳大利亚墨尔本");
        m.insert("PER", "澳大利亚珀斯");
        m.insert("SYD", "澳大利亚悉尼");
        m.insert("VIE", "奥地利维也纳");
        m.insert("LLK", "阿塞拜疆阿斯塔拉");
        m.insert("GYD", "阿塞拜疆巴库");
        m.insert("BAH", "巴林麦纳麦");
        m.insert("CGP", "孟加拉国吉大港");
        m.insert("DAC", "孟加拉国达卡");
        m.insert("JSR", "孟加拉国贾肖尔");
        m.insert("BGI", "巴巴多斯布里奇顿");
        m.insert("MSQ", "白俄罗斯明斯克");
        m.insert("BRU", "比利时布鲁塞尔");
        m.insert("PBH", "不丹廷布");
        m.insert("GBE", "博茨瓦纳哈博罗内");
        m.insert("QWJ", "巴西阿美利加");
        m.insert("BEL", "巴西贝伦");
        m.insert("CNF", "巴西贝洛哈里藏特");
        m.insert("BNU", "巴西布卢梅瑙");
        m.insert("BSB", "巴西巴西利亚");
        m.insert("CFC", "巴西卡卡多");
        m.insert("VCP", "巴西坎皮纳斯");
        m.insert("CAW", "巴西戈伊塔卡泽斯");
        m.insert("XAP", "巴西沙佩科");
        m.insert("CGB", "巴西库亚巴");
        m.insert("CWB", "巴西库里提巴");
        m.insert("FLN", "巴西弗洛里亚诺波利斯");
        m.insert("FOR", "巴西福塔雷萨");
        m.insert("GYN", "巴西戈亚尼亚");
        m.insert("ITJ", "巴西伊塔贾伊");
        m.insert("JOI", "巴西若因维尔");
        m.insert("JDO", "巴西朱阿泽伊罗");
        m.insert("MAO", "巴西马瑙斯");
        m.insert("POA", "巴西阿雷格里港");
        m.insert("REC", "巴西累西腓");
        m.insert("RAO", "巴西里贝朗普雷图");
        m.insert("GIG", "巴西里约热内卢");
        m.insert("SSA", "巴西萨尔瓦多");
        m.insert("SJP", "巴西圣若泽");
        m.insert("SJK", "巴西圣若泽杜斯坎普斯");
        m.insert("GRU", "巴西圣保罗");
        m.insert("SOD", "巴西索罗卡巴");
        m.insert("NVT", "巴西廷博");
        m.insert("UDI", "巴西乌贝兰迪亚");
        m.insert("VIX", "巴西维多利亚");
        m.insert("BWN", "文莱斯里巴加湾");
        m.insert("SOF", "保加利亚索非亚");
        m.insert("OUA", "布基纳法索瓦加杜古");
        m.insert("PNH", "柬埔寨金边");
        m.insert("YYC", "加拿大卡尔加里");
        m.insert("YVR", "加拿大温哥华");
        m.insert("YWG", "加拿大温尼伯");
        m.insert("YOW", "加拿大渥太华");
        m.insert("YYZ", "加拿大多伦多");
        m.insert("YUL", "加拿大蒙特利尔");
        m.insert("YXE", "加拿大萨斯卡通");
        m.insert("ARI", "智利阿里卡");
        m.insert("SCL", "智利圣地亚哥");
        m.insert("BOG", "哥伦比亚波哥大");
        m.insert("MDE", "哥伦比亚麦德林");
        m.insert("FIH", "刚果民主共和国金沙萨");
        m.insert("SJO", "哥斯达黎加圣何塞");
        m.insert("ZAG", "克罗地亚萨格勒布");
        m.insert("CUR", "库拉索威廉斯塔德");
        m.insert("LCA", "塞浦路斯尼科西亚");
        m.insert("PRG", "捷克布拉格");
        m.insert("CPH", "丹麦哥本哈根");
        m.insert("JIB", "吉布提吉布提");
        m.insert("SDQ", "多米尼加共和国圣多明各");
        m.insert("GYE", "厄瓜多尔瓜亚基尔");
        m.insert("UIO", "厄瓜多尔基多");
        m.insert("CAI", "埃及开罗");
        m.insert("TLL", "爱沙尼亚塔林");
        m.insert("HEL", "芬兰赫尔辛基");
        m.insert("BOD", "法国波尔多");
        m.insert("LYS", "法国里昂");
        m.insert("MRS", "法国马赛");
        m.insert("CDG", "法国巴黎");
        m.insert("PPT", "法属波利尼西亚塔希提");
        m.insert("TBS", "格鲁吉亚第比利斯");
        m.insert("TXL", "德国柏林");
        m.insert("DUS", "德国杜塞尔多夫");
        m.insert("FRA", "德国法兰克福");
        m.insert("HAM", "德国汉堡");
        m.insert("MUC", "德国慕尼黑");
        m.insert("STR", "德国斯图加特");
        m.insert("ACC", "加纳阿克拉");
        m.insert("ATH", "希腊雅典");
        m.insert("SKG", "希腊塞萨洛尼基");
        m.insert("GND", "格林纳达圣乔治");
        m.insert("GUM", "关岛哈甘那");
        m.insert("GUA", "危地马拉城");
        m.insert("GEO", "圭亚那乔治敦");
        m.insert("TGU", "洪都拉斯特古西加尔巴");
        m.insert("HKG", "中国香港");
        m.insert("BUD", "匈牙利布达佩斯");
        m.insert("KEF", "冰岛雷克雅未克");
        m.insert("AMD", "印度阿默达巴德");
        m.insert("BLR", "印度班加罗尔");
        m.insert("BBI", "印度布巴内斯瓦尔");
        m.insert("IXC", "印度昌迪加尔");
        m.insert("MAA", "印度钦奈");
        m.insert("HYD", "印度海得拉巴");
        m.insert("CNN", "印度坎努尔");
        m.insert("KNU", "印度坎普尔");
        m.insert("COK", "印度科钦");
        m.insert("CCU", "印度加尔各答");
        m.insert("BOM", "印度孟买");
        m.insert("NAG", "印度纳格浦尔");
        m.insert("DEL", "印度新德里");
        m.insert("PAT", "印度帕特那");
        m.insert("DPS", "印度尼西亚登巴萨");
        m.insert("CGK", "印度尼西亚雅加达");
        m.insert("JOG", "印度尼西亚日惹");
        m.insert("BGW", "伊拉克巴格达");
        m.insert("BSR", "伊拉克巴士拉");
        m.insert("EBL", "伊拉克埃尔比勒");
        m.insert("NJF", "伊拉克纳杰夫");
        m.insert("XNH", "伊拉克纳西里耶");
        m.insert("ISU", "伊拉克苏莱曼尼亚");
        m.insert("ORK", "爱尔兰科克");
        m.insert("DUB", "爱尔兰都柏林");
        m.insert("HFA", "以色列海法");
        m.insert("TLV", "以色列特拉维夫");
        m.insert("MXP", "意大利米兰");
        m.insert("PMO", "意大利巴勒莫");
        m.insert("FCO", "意大利罗马");
        m.insert("KIN", "牙买加金斯敦");
        m.insert("FUK", "日本福冈");
        m.insert("OKA", "日本那霸");
        m.insert("KIX", "日本大阪");
        m.insert("NRT", "日本成田");
        m.insert("AMM", "约旦安曼");
        m.insert("ALA", "哈萨克斯坦阿拉木图");
        m.insert("MBA", "肯尼亚蒙巴萨");
        m.insert("NBO", "肯尼亚内罗毕");
        m.insert("ICN", "韩国仁川");
        m.insert("KWI", "科威特科威特城");
        m.insert("VTE", "老挝万象");
        m.insert("RIX", "拉脱维亚里加");
        m.insert("BEY", "黎巴嫩贝鲁特");
        m.insert("VNO", "立陶宛维尔纽斯");
        m.insert("LUX", "卢森堡卢森堡市");
        m.insert("MFM", "中国澳门");
        m.insert("TNR", "马达加斯加塔那那利佛");
        m.insert("JHB", "马来西亚柔佛巴鲁");
        m.insert("KUL", "马来西亚吉隆坡");
        m.insert("MLE", "马尔代夫马累");
        m.insert("MRU", "毛里求斯路易港");
        m.insert("GDL", "墨西哥瓜达拉哈拉");
        m.insert("MEX", "墨西哥墨西哥城");
        m.insert("QRO", "墨西哥克雷塔罗");
        m.insert("KIV", "摩尔多瓦基希讷乌");
        m.insert("ULN", "蒙古乌兰巴托");
        m.insert("CMN", "摩洛哥卡萨布兰卡");
        m.insert("MPM", "莫桑比克马普托");
        m.insert("MDL", "缅甸曼德勒");
        m.insert("RGN", "缅甸仰光");
        m.insert("KTM", "尼泊尔加德满都");
        m.insert("AMS", "荷兰阿姆斯特丹");
        m.insert("NOU", "新喀里多尼亚努美阿");
        m.insert("AKL", "新西兰奥克兰");
        m.insert("CHC", "新西兰基督城");
        m.insert("LOS", "尼日利亚拉各斯");
        m.insert("OSL", "挪威奥斯陆");
        m.insert("MCT", "阿曼马斯喀特");
        m.insert("ISB", "巴基斯坦伊斯兰堡");
        m.insert("KHI", "巴基斯坦卡拉奇");
        m.insert("LHE", "巴基斯坦拉合尔");
        m.insert("ZDM", "巴勒斯坦拉马拉");
        m.insert("PTY", "巴拿马城");
        m.insert("ASU", "巴拉圭亚松森");
        m.insert("LIM", "秘鲁利马");
        m.insert("CGY", "菲律宾卡加延德奥罗");
        m.insert("CEB", "菲律宾宿务");
        m.insert("MNL", "菲律宾马尼拉");
        m.insert("WAW", "波兰华沙");
        m.insert("LIS", "葡萄牙里斯本");
        m.insert("DOH", "卡塔尔多哈");
        m.insert("RUN", "留尼汪圣丹尼");
        m.insert("OTP", "罗马尼亚布加勒斯特");
        m.insert("KHV", "俄罗斯哈巴罗夫斯克");
        m.insert("KJA", "俄罗斯克拉斯诺亚尔斯克");
        m.insert("DME", "俄罗斯莫斯科");
        m.insert("LED", "俄罗斯圣彼得堡");
        m.insert("KLD", "俄罗斯图韦尔");
        m.insert("SVX", "俄罗斯叶卡捷琳堡");
        m.insert("KGL", "卢旺达基加利");
        m.insert("DMM", "沙特阿拉伯达曼");
        m.insert("JED", "沙特阿拉伯吉达");
        m.insert("RUH", "沙特阿拉伯利雅得");
        m.insert("DKR", "塞内加尔达喀尔");
        m.insert("BEG", "塞尔维亚贝尔格莱德");
        m.insert("SIN", "新加坡");
        m.insert("BTS", "斯洛伐克布拉迪斯拉发");
        m.insert("CPT", "南非开普敦");
        m.insert("DUR", "南非德班");
        m.insert("JNB", "南非约翰内斯堡");
        m.insert("BCN", "西班牙巴塞罗那");
        m.insert("MAD", "西班牙马德里");
        m.insert("CMB", "斯里兰卡科伦坡");
        m.insert("PBM", "苏里南帕拉马里博");
        m.insert("GOT", "瑞典哥德堡");
        m.insert("ARN", "瑞典斯德哥尔摩");
        m.insert("GVA", "瑞士日内瓦");
        m.insert("ZRH", "瑞士苏黎世");
        m.insert("KHH", "台湾高雄市");
        m.insert("TPE", "台湾台北");
        m.insert("DAR", "坦桑尼亚达累斯萨拉姆");
        m.insert("BKK", "泰国曼谷");
        m.insert("CNX", "泰国清迈");
        m.insert("URT", "泰国苏拉特他尼");
        m.insert("TUN", "突尼斯突尼斯");
        m.insert("IST", "土耳其伊斯坦布尔");
        m.insert("ADB", "土耳其伊兹密尔");
        m.insert("KBP", "乌克兰基辅");
        m.insert("DXB", "阿联酋迪拜");
        m.insert("EDI", "英国爱丁堡");
        m.insert("LHR", "英国伦敦");
        m.insert("MAN", "英国曼彻斯特");
        m.insert("MGM", "美国蒙哥马利");
        m.insert("PHX", "美国凤凰城");
        m.insert("LAX", "美国洛杉矶");
        m.insert("SMF", "美国萨克拉门托");
        m.insert("SAN", "美国圣地亚哥");
        m.insert("SFO", "美国旧金山");
        m.insert("SJC", "美国圣何塞");
        m.insert("DEN", "美国丹佛");
        m.insert("JAX", "美国杰克逊维尔");
        m.insert("MIA", "美国迈阿密");
        m.insert("TLH", "美国塔拉哈西");
        m.insert("TPA", "美国坦帕");
        m.insert("ATL", "美国亚特兰大");
        m.insert("HNL", "美国檀香山");
        m.insert("ORD", "美国芝加哥");
        m.insert("IND", "美国印第安纳波利斯");
        m.insert("BGR", "美国班戈");
        m.insert("BOS", "美国波士顿");
        m.insert("DTW", "美国底特律");
        m.insert("MSP", "美国明尼阿波利斯");
        m.insert("MCI", "美国堪萨斯城");
        m.insert("STL", "美国圣路易斯");
        m.insert("OMA", "美国奥马哈");
        m.insert("LAS", "美国拉斯维加斯");
        m.insert("EWR", "美国纽瓦克");
        m.insert("ABQ", "美国阿尔伯克基");
        m.insert("BUF", "美国布法罗");
        m.insert("CLT", "美国夏洛特");
        m.insert("RDU", "美国达勒姆");
        m.insert("CLE", "美国克利夫兰");
        m.insert("CMH", "美国哥伦布");
        m.insert("OKC", "美国俄克拉荷马城");
        m.insert("PDX", "美国波特兰");
        m.insert("PHL", "美国费城");
        m.insert("PIT", "美国匹兹堡");
        m.insert("FSD", "美国苏福尔斯");
        m.insert("MEM", "美国孟菲斯");
        m.insert("BNA", "美国纳什维尔");
        m.insert("AUS", "美国奥斯汀");
        m.insert("DFW", "美国达拉斯");
        m.insert("IAH", "美国休斯顿");
        m.insert("MFE", "美国麦卡伦");
        m.insert("SAT", "美国圣安东尼奥");
        m.insert("SLC", "美国盐湖城");
        m.insert("IAD", "美国华盛顿");
        m.insert("SEA", "美国西雅图");
        m.insert("TAS", "乌兹别克斯坦塔什干");
        m.insert("HAN", "越南河内");
        m.insert("SGN", "越南胡志明市");
        m.insert("HRE", "津巴布韦哈拉雷");
        m
    };
}

// 查询区域名称
pub fn get_region_name(code: &str) -> Option<&'static str> {
    REGION_MAP.get(code).copied().or(Some("未知")) // 如果未找到，返回 “未知”
}
